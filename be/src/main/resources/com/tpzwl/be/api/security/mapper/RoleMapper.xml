<?xml version="1.0" encoding="UTF-8" ?>
<!--

       Copyright 2015-2022 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          https://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tpzwl.be.api.security.mapper.RoleMapper">
    <select id="findMenuTreeByRoleIds" resultType="com.tpzwl.be.api.security.model.Permission">
        WITH RECURSIVE permission_tree AS (
            SELECT 
                p.id, 
                p.permission, 
                p.is_menu, 
                p.parent, 
                p.path, 
                p.router_name, 
                p.locale, 
                p.requires_auth, 
                p.icon, 
                p.sort_order,
                1 AS depth
            FROM role_permissions rp
            JOIN permissions p ON rp.permission_id = p.id
            WHERE rp.role_id IN
                <foreach collection="roleIds" item="roleId" open="(" separator="," close=")">
                    #{roleId}
                </foreach>
                AND p.parent IS NULL 
                AND p.is_menu = true
            
            UNION ALL
            
            SELECT 
                p.id, 
                p.permission, 
                p.is_menu, 
                p.parent, 
                p.path, 
                p.router_name, 
                p.locale, 
                p.requires_auth, 
                p.icon, 
                p.sort_order,
                pt.depth + 1 AS depth
            FROM permissions p
            JOIN permission_tree pt ON p.parent = pt.id
            WHERE p.is_menu = true
        )
        SELECT 
            id, 
            permission, 
            is_menu, 
            parent, 
            path, 
            router_name, 
            locale, 
            requires_auth, 
            icon, 
            sort_order, 
            depth 
        FROM permission_tree
    </select>
</mapper>
